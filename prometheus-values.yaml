networkPolicy:
  enabled: true
alertManager:
  persistentVolume:
    storageClass: managed-standard
server:
  verticalAutoscaler:
    enabled: false
  persistentVolume:
    storageClass: managed-standard
    size: 40Gi
  global:
    scrape_interval: 30s
alertmanagerFiles:
  alertmanager.yml:
    route:
      # Group related alerts into one alert based on the following array
      group_by: ['alertname', 'job']
      # How long to wait to buffer alerts of the same group before sending a notification initially.
      group_wait: 30s
      # How long to wait before sending an alert that has been added to a group for which there has already been a notification.
      group_interval: 5m
      #default reciever
      receiver: notify
      # How long to wait before re-sending a given alert that has already been sent in a notification.
      repeat_interval: 24h
      routes:
      - receiver: healthcheck
        repeat_interval: 24h
        match:
          severity: healthcheck
      - receiver: notify
        repeat_interval: 24h
        match:
          severity: notify
      - receiver: alert
        repeat_interval: 24h
        match:
          severity: alert
    receivers:
    - name: 'healthcheck'
      slack_configs:
      - api_url: "$HEALTH_URL"
        channel: 'app-healthchecks'
        color: good
        title: '{{ .CommonAnnotations.description }}'
        text: '{{ .CommonAnnotations.summary }}'
    - name: alert
      slack_configs:
      - api_url: "$ALERT_URL"
        send_resolved: true
        title: '[{{ .Status | toUpper }}] {{ .CommonAnnotations.description }}'
        text: '{{ .CommonAnnotations.summary }}'
    - name: notify
      slack_configs:
      - api_url: "$NOTIFY_URL"
        send_resolved: true
        title: '[{{ .Status | toUpper }}] {{ .CommonAnnotations.description }}'
        text: '{{ .CommonAnnotations.summary }}'
